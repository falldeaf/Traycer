{
  "api/Traycer.App.html": {
    "href": "api/Traycer.App.html",
    "title": "Class App | Traycer HUD",
    "summary": "Class App Namespace Traycer Assembly Traycer.dll App public class App : Application, IQueryAmbient Inheritance object DispatcherObject Application App Implements IQueryAmbient Inherited Members Application.FindResource(object) Application.GetContentStream(Uri) Application.GetCookie(Uri) Application.GetRemoteStream(Uri) Application.GetResourceStream(Uri) Application.LoadComponent(object, Uri) Application.LoadComponent(Uri) Application.OnActivated(EventArgs) Application.OnDeactivated(EventArgs) Application.OnExit(ExitEventArgs) Application.OnFragmentNavigation(FragmentNavigationEventArgs) Application.OnLoadCompleted(NavigationEventArgs) Application.OnNavigated(NavigationEventArgs) Application.OnNavigating(NavigatingCancelEventArgs) Application.OnNavigationFailed(NavigationFailedEventArgs) Application.OnNavigationProgress(NavigationProgressEventArgs) Application.OnNavigationStopped(NavigationEventArgs) Application.OnSessionEnding(SessionEndingCancelEventArgs) Application.OnStartup(StartupEventArgs) Application.Run() Application.Run(Window) Application.SetCookie(Uri, string) Application.Shutdown() Application.Shutdown(int) Application.TryFindResource(object) Application.Current Application.MainWindow Application.Properties Application.ResourceAssembly Application.Resources Application.ShutdownMode Application.StartupUri Application.Windows Application.Activated Application.Deactivated Application.DispatcherUnhandledException Application.Exit Application.FragmentNavigation Application.LoadCompleted Application.Navigated Application.Navigating Application.NavigationFailed Application.NavigationProgress Application.NavigationStopped Application.SessionEnding Application.Startup DispatcherObject.Dispatcher object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InitializeComponent() InitializeComponent public void InitializeComponent() Main() Application Entry Point. [STAThread] public static void Main()"
  },
  "api/Traycer.MainWindow.html": {
    "href": "api/Traycer.MainWindow.html",
    "title": "Class MainWindow | Traycer HUD",
    "summary": "Class MainWindow Namespace Traycer Assembly Traycer.dll Hosts the Traycer HUD window and delegates platform helpers. public class MainWindow : Window, IAnimatable, ISupportInitialize, IFrameworkInputElement, IInputElement, IQueryAmbient, IAddChild, IComponentConnector Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control ContentControl Window MainWindow Implements IAnimatable ISupportInitialize IFrameworkInputElement IInputElement IQueryAmbient IAddChild IComponentConnector Inherited Members Window.AllowsTransparencyProperty Window.DpiChangedEvent Window.IconProperty Window.IsActiveProperty Window.LeftProperty Window.ResizeModeProperty Window.ShowActivatedProperty Window.ShowInTaskbarProperty Window.SizeToContentProperty Window.TaskbarItemInfoProperty Window.TitleProperty Window.TopmostProperty Window.TopProperty Window.WindowStateProperty Window.WindowStyleProperty Window.Activate() Window.ArrangeOverride(Size) Window.Close() Window.DragMove() Window.GetWindow(DependencyObject) Window.Hide() Window.MeasureOverride(Size) Window.OnActivated(EventArgs) Window.OnClosed(EventArgs) Window.OnClosing(CancelEventArgs) Window.OnContentChanged(object, object) Window.OnContentRendered(EventArgs) Window.OnCreateAutomationPeer() Window.OnDeactivated(EventArgs) Window.OnDpiChanged(DpiScale, DpiScale) Window.OnLocationChanged(EventArgs) Window.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) Window.OnSourceInitialized(EventArgs) Window.OnStateChanged(EventArgs) Window.OnVisualChildrenChanged(DependencyObject, DependencyObject) Window.OnVisualParentChanged(DependencyObject) Window.Show() Window.ShowDialog() Window.AllowsTransparency Window.DialogResult Window.Icon Window.IsActive Window.Left Window.LogicalChildren Window.OwnedWindows Window.Owner Window.ResizeMode Window.RestoreBounds Window.ShowActivated Window.ShowInTaskbar Window.SizeToContent Window.TaskbarItemInfo Window.Title Window.Top Window.Topmost Window.WindowStartupLocation Window.WindowState Window.WindowStyle Window.Activated Window.Closed Window.Closing Window.ContentRendered Window.Deactivated Window.DpiChanged Window.LocationChanged Window.SourceInitialized Window.StateChanged ContentControl.ContentProperty ContentControl.ContentStringFormatProperty ContentControl.ContentTemplateProperty ContentControl.ContentTemplateSelectorProperty ContentControl.HasContentProperty ContentControl.AddChild(object) ContentControl.AddText(string) ContentControl.OnContentStringFormatChanged(string, string) ContentControl.OnContentTemplateChanged(DataTemplate, DataTemplate) ContentControl.OnContentTemplateSelectorChanged(DataTemplateSelector, DataTemplateSelector) ContentControl.Content ContentControl.ContentStringFormat ContentControl.ContentTemplate ContentControl.ContentTemplateSelector ContentControl.HasContent Control.BackgroundProperty Control.BorderBrushProperty Control.BorderThicknessProperty Control.FontFamilyProperty Control.FontSizeProperty Control.FontStretchProperty Control.FontStyleProperty Control.FontWeightProperty Control.ForegroundProperty Control.HorizontalContentAlignmentProperty Control.IsTabStopProperty Control.MouseDoubleClickEvent Control.PaddingProperty Control.PreviewMouseDoubleClickEvent Control.TabIndexProperty Control.TemplateProperty Control.VerticalContentAlignmentProperty Control.OnMouseDoubleClick(MouseButtonEventArgs) Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs) Control.OnTemplateChanged(ControlTemplate, ControlTemplate) Control.ToString() Control.Background Control.BorderBrush Control.BorderThickness Control.FontFamily Control.FontSize Control.FontStretch Control.FontStyle Control.FontWeight Control.Foreground Control.HandlesScrolling Control.HorizontalContentAlignment Control.IsTabStop Control.Padding Control.TabIndex Control.Template Control.VerticalContentAlignment Control.MouseDoubleClick Control.PreviewMouseDoubleClick FrameworkElement.ActualHeightProperty FrameworkElement.ActualWidthProperty FrameworkElement.BindingGroupProperty FrameworkElement.ContextMenuClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuProperty FrameworkElement.CursorProperty FrameworkElement.DataContextProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.FlowDirectionProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.ForceCursorProperty FrameworkElement.HeightProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.InputScopeProperty FrameworkElement.LanguageProperty FrameworkElement.LayoutTransformProperty FrameworkElement.LoadedEvent FrameworkElement.MarginProperty FrameworkElement.MaxHeightProperty FrameworkElement.MaxWidthProperty FrameworkElement.MinHeightProperty FrameworkElement.MinWidthProperty FrameworkElement.NameProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.StyleProperty FrameworkElement.TagProperty FrameworkElement.ToolTipClosingEvent FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipProperty FrameworkElement.UnloadedEvent FrameworkElement.UseLayoutRoundingProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.WidthProperty FrameworkElement.AddLogicalChild(object) FrameworkElement.ApplyTemplate() FrameworkElement.ArrangeCore(Rect) FrameworkElement.BeginInit() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.EndInit() FrameworkElement.FindName(string) FrameworkElement.FindResource(object) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.GetLayoutClip(Size) FrameworkElement.GetTemplateChild(string) FrameworkElement.GetUIParentCore() FrameworkElement.GetVisualChild(int) FrameworkElement.MeasureCore(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.OnApplyTemplate() FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.RegisterName(string, object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.TryFindResource(object) FrameworkElement.UnregisterName(string) FrameworkElement.UpdateDefaultStyle() FrameworkElement.ActualHeight FrameworkElement.ActualWidth FrameworkElement.BindingGroup FrameworkElement.ContextMenu FrameworkElement.Cursor FrameworkElement.DataContext FrameworkElement.DefaultStyleKey FrameworkElement.FlowDirection FrameworkElement.FocusVisualStyle FrameworkElement.ForceCursor FrameworkElement.Height FrameworkElement.HorizontalAlignment FrameworkElement.InheritanceBehavior FrameworkElement.InputScope FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.Language FrameworkElement.LayoutTransform FrameworkElement.Margin FrameworkElement.MaxHeight FrameworkElement.MaxWidth FrameworkElement.MinHeight FrameworkElement.MinWidth FrameworkElement.Name FrameworkElement.OverridesDefaultStyle FrameworkElement.Parent FrameworkElement.Resources FrameworkElement.Style FrameworkElement.Tag FrameworkElement.TemplatedParent FrameworkElement.ToolTip FrameworkElement.Triggers FrameworkElement.UseLayoutRounding FrameworkElement.VerticalAlignment FrameworkElement.VisualChildrenCount FrameworkElement.Width FrameworkElement.ContextMenuClosing FrameworkElement.ContextMenuOpening FrameworkElement.DataContextChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.SourceUpdated FrameworkElement.TargetUpdated FrameworkElement.ToolTipClosing FrameworkElement.ToolTipOpening FrameworkElement.Unloaded UIElement.AllowDropProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.BitmapEffectInputProperty UIElement.BitmapEffectProperty UIElement.CacheModeProperty UIElement.ClipProperty UIElement.ClipToBoundsProperty UIElement.DragEnterEvent UIElement.DragLeaveEvent UIElement.DragOverEvent UIElement.DropEvent UIElement.EffectProperty UIElement.FocusableProperty UIElement.GiveFeedbackEvent UIElement.GotFocusEvent UIElement.GotKeyboardFocusEvent UIElement.GotMouseCaptureEvent UIElement.GotStylusCaptureEvent UIElement.GotTouchCaptureEvent UIElement.IsEnabledProperty UIElement.IsFocusedProperty UIElement.IsHitTestVisibleProperty UIElement.IsKeyboardFocusedProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsManipulationEnabledProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusOverProperty UIElement.IsVisibleProperty UIElement.KeyDownEvent UIElement.KeyUpEvent UIElement.LostFocusEvent UIElement.LostKeyboardFocusEvent UIElement.LostMouseCaptureEvent UIElement.LostStylusCaptureEvent UIElement.LostTouchCaptureEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationStartingEvent UIElement.MouseDownEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.MouseLeftButtonDownEvent UIElement.MouseLeftButtonUpEvent UIElement.MouseMoveEvent UIElement.MouseRightButtonDownEvent UIElement.MouseRightButtonUpEvent UIElement.MouseUpEvent UIElement.MouseWheelEvent UIElement.OpacityMaskProperty UIElement.OpacityProperty UIElement.PreviewDragEnterEvent UIElement.PreviewDragLeaveEvent UIElement.PreviewDragOverEvent UIElement.PreviewDropEvent UIElement.PreviewGiveFeedbackEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.PreviewKeyDownEvent UIElement.PreviewKeyUpEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.PreviewMouseDownEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.PreviewMouseUpEvent UIElement.PreviewMouseWheelEvent UIElement.PreviewQueryContinueDragEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewStylusDownEvent UIElement.PreviewStylusInAirMoveEvent UIElement.PreviewStylusInRangeEvent UIElement.PreviewStylusMoveEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.PreviewStylusUpEvent UIElement.PreviewTextInputEvent UIElement.PreviewTouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.QueryContinueDragEvent UIElement.QueryCursorEvent UIElement.RenderTransformOriginProperty UIElement.RenderTransformProperty UIElement.SnapsToDevicePixelsProperty UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.StylusDownEvent UIElement.StylusEnterEvent UIElement.StylusInAirMoveEvent UIElement.StylusInRangeEvent UIElement.StylusLeaveEvent UIElement.StylusMoveEvent UIElement.StylusOutOfRangeEvent UIElement.StylusSystemGestureEvent UIElement.StylusUpEvent UIElement.TextInputEvent UIElement.TouchDownEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.TouchMoveEvent UIElement.TouchUpEvent UIElement.UidProperty UIElement.VisibilityProperty UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.Arrange(Rect) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.CaptureMouse() UIElement.CaptureStylus() UIElement.CaptureTouch(TouchDevice) UIElement.Focus() UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.HitTestCore(PointHitTestParameters) UIElement.InputHitTest(Point) UIElement.InvalidateArrange() UIElement.InvalidateMeasure() UIElement.InvalidateVisual() UIElement.Measure(Size) UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.OnDragEnter(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnRender(DrawingContext) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.RaiseEvent(RoutedEventArgs) UIElement.ReleaseAllTouchCaptures() UIElement.ReleaseMouseCapture() UIElement.ReleaseStylusCapture() UIElement.ReleaseTouchCapture(TouchDevice) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.TranslatePoint(Point, UIElement) UIElement.UpdateLayout() UIElement.AllowDrop UIElement.AreAnyTouchesCaptured UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesOver UIElement.BitmapEffect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Clip UIElement.ClipToBounds UIElement.CommandBindings UIElement.DesiredSize UIElement.Effect UIElement.Focusable UIElement.HasAnimatedProperties UIElement.HasEffectiveKeyboardFocus UIElement.InputBindings UIElement.IsArrangeValid UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsFocused UIElement.IsHitTestVisible UIElement.IsInputMethodEnabled UIElement.IsKeyboardFocused UIElement.IsKeyboardFocusWithin UIElement.IsManipulationEnabled UIElement.IsMeasureValid UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusOver UIElement.IsVisible UIElement.Opacity UIElement.OpacityMask UIElement.PersistId UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.SnapsToDevicePixels UIElement.StylusPlugIns UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesDirectlyOver UIElement.TouchesOver UIElement.Uid UIElement.Visibility UIElement.DragEnter UIElement.DragLeave UIElement.DragOver UIElement.Drop UIElement.FocusableChanged UIElement.GiveFeedback UIElement.GotFocus UIElement.GotKeyboardFocus UIElement.GotMouseCapture UIElement.GotStylusCapture UIElement.GotTouchCapture UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsKeyboardFocusedChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsMouseDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsVisibleChanged UIElement.KeyDown UIElement.KeyUp UIElement.LayoutUpdated UIElement.LostFocus UIElement.LostKeyboardFocus UIElement.LostMouseCapture UIElement.LostStylusCapture UIElement.LostTouchCapture UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationStarted UIElement.ManipulationStarting UIElement.MouseDown UIElement.MouseEnter UIElement.MouseLeave UIElement.MouseLeftButtonDown UIElement.MouseLeftButtonUp UIElement.MouseMove UIElement.MouseRightButtonDown UIElement.MouseRightButtonUp UIElement.MouseUp UIElement.MouseWheel UIElement.PreviewDragEnter UIElement.PreviewDragLeave UIElement.PreviewDragOver UIElement.PreviewDrop UIElement.PreviewGiveFeedback UIElement.PreviewGotKeyboardFocus UIElement.PreviewKeyDown UIElement.PreviewKeyUp UIElement.PreviewLostKeyboardFocus UIElement.PreviewMouseDown UIElement.PreviewMouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.PreviewMouseMove UIElement.PreviewMouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.PreviewMouseUp UIElement.PreviewMouseWheel UIElement.PreviewQueryContinueDrag UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewStylusDown UIElement.PreviewStylusInAirMove UIElement.PreviewStylusInRange UIElement.PreviewStylusMove UIElement.PreviewStylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.PreviewStylusUp UIElement.PreviewTextInput UIElement.PreviewTouchDown UIElement.PreviewTouchMove UIElement.PreviewTouchUp UIElement.QueryContinueDrag UIElement.QueryCursor UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.StylusDown UIElement.StylusEnter UIElement.StylusInAirMove UIElement.StylusInRange UIElement.StylusLeave UIElement.StylusMove UIElement.StylusOutOfRange UIElement.StylusSystemGesture UIElement.StylusUp UIElement.TextInput UIElement.TouchDown UIElement.TouchEnter UIElement.TouchLeave UIElement.TouchMove UIElement.TouchUp Visual.AddVisualChild(Visual) Visual.FindCommonVisualAncestor(DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.PointFromScreen(Point) Visual.PointToScreen(Point) Visual.RemoveVisualChild(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToAncestor(Visual) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualBitmapScalingMode Visual.VisualCacheMode Visual.VisualClearTypeHint Visual.VisualClip Visual.VisualEdgeMode Visual.VisualEffect Visual.VisualOffset Visual.VisualOpacity Visual.VisualOpacityMask Visual.VisualParent Visual.VisualScrollableAreaClip Visual.VisualTextHintingMode Visual.VisualTextRenderingMode Visual.VisualTransform Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetLocalValueEnumerator() DependencyObject.GetValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MainWindow() Creates the HUD shell and seeds configuration. public MainWindow() Methods InitializeComponent() InitializeComponent public void InitializeComponent()"
  },
  "api/Traycer.html": {
    "href": "api/Traycer.html",
    "title": "Namespace Traycer | Traycer HUD",
    "summary": "Namespace Traycer Classes App App MainWindow Hosts the Traycer HUD window and delegates platform helpers."
  },
  "articles/custom-scripts.html": {
    "href": "articles/custom-scripts.html",
    "title": "Custom Script Tutorial | Traycer HUD",
    "summary": "Custom Script Tutorial This walkthrough covers two common ways to drive Traycer wells with your own automation scripts: a timer-style job that runs, updates, and exits, and a long-lived daemon that stays connected to the named pipe. Prerequisites Traycer HUD running locally. A language/runtime capable of writing UTF-8 lines to the named pipe \\\\.\\pipe\\TraycerHud (examples below use PowerShell and Python). Pattern 1: Timer job Use a script that performs a single update and exit. Pair it with either Windows Task Scheduler or a Traycer once task to run it on a cadence. Example PowerShell script (scripts/update-weather.ps1): param( [string]$Well = \"weather\" ) $payload = @{ op = \"set\" well = $Well text = \"\uD83C\uDF26️ $(Get-Date -Format 't')\" bg = \"#33223333\" } | ConvertTo-Json -Compress $pipe = new-object System.IO.Pipes.NamedPipeClientStream('.', 'TraycerHud', [System.IO.Pipes.PipeDirection]::Out) $pipe.Connect(2000) $writer = new-object System.IO.StreamWriter($pipe, New-Object System.Text.UTF8Encoding($false)) $writer.AutoFlush = $true $writer.WriteLine($payload) $writer.Dispose(); $pipe.Dispose() Schedule it every five minutes (Task Scheduler) or add to the defaults: { \"id\": \"weather-poll\", \"command\": \"pwsh\", \"args\": \"-File \\\"scripts/update-weather.ps1\\\"\", \"mode\": \"schedule\", \"autoStart\": true, \"schedule\": { \"frequency\": \"minute\", \"interval\": 5 } } Pattern 2: Background daemon For continuous feeds, keep the script connected to the pipe, emit updates as needed, and clean up on exit. Example Python daemon (scripts/stock_daemon.py): import json import os import sys import time import ctypes from ctypes import wintypes PIPE_NAME = r\"\\\\.\\pipe\\TraycerHud\" WELL_ID = \"stocks\" class Pipe: def __enter__(self): while True: try: self.handle = open(PIPE_NAME, \"w\", encoding=\"utf-8\", newline=\"\\n\") break except OSError: time.sleep(0.5) return self def send(self, payload): self.handle.write(json.dumps(payload, ensure_ascii=False) + \"\\n\") self.handle.flush() def __exit__(self, exc_type, exc, tb): self.handle.close() if __name__ == \"__main__\": try: with Pipe() as pipe: pipe.send({\"op\": \"add\", \"well\": WELL_ID, \"width\": 220}) pipe.send({\"op\": \"set\", \"well\": WELL_ID, \"text\": \"\uD83D\uDCC8 Initializing\"}) while True: price = fetch_price_somehow() pipe.send({\"op\": \"set\", \"well\": WELL_ID, \"text\": f\"\uD83D\uDCC8 {price:$}\"}) time.sleep(10) except KeyboardInterrupt: with Pipe() as pipe: pipe.send({\"op\": \"remove\", \"well\": WELL_ID}) Key ideas: Ensure the script retries connecting to the pipe until Traycer is ready. Send an add message once to create the well dynamically. On shutdown, remove the well so the HUD stays tidy. Testing tips Use pwsh -Command \"Get-Content -Wait -Path \\\"\\\\.\\pipe\\TraycerHud\\\"\" in a second console to inspect outgoing messages. Wrap long-running scripts in Traycer once tasks with autoStart to manage their lifecycle through the tray menu. Remember that all messages must be UTF-8 and newline-terminated."
  },
  "articles/defaults.html": {
    "href": "articles/defaults.html",
    "title": "Defaults Configuration | Traycer HUD",
    "summary": "Defaults Configuration Traycer requires a defaults file before the HUD can render. This article explains where the file lives, how it is discovered, and the sections you can use to seed layout, text, actions, and background tasks. File location Traycer searches for traycer.defaults.json in the following order: AppContext.BaseDirectory\\traycer.defaults.json – beside the executable. %LOCALAPPDATA%\\Traycer\\traycer.defaults.json – the per-user copy. Path referenced by the TRAYCER_DEFAULTS environment variable – highest priority. The first existing file wins. If none are found, Traycer prompts to create a template under %LOCALAPPDATA%\\Traycer using the bundled sample. Minimal template { \"placement\": { \"height\": 24, \"bottomOffset\": 2, \"padding\": 6, \"cornerRadius\": 8 }, \"wells\": [ { \"id\": \"weather\", \"width\": 240 }, { \"id\": \"build\", \"width\": 180 } ], \"updates\": [ { \"well\": \"weather\", \"text\": \"\uD83C\uDF26️ 73°F\", \"bg\": \"#33223333\" } ] } Each top-level section is optional, but the file itself must be valid JSON. Keys are case-insensitive. placement Controls initial window geometry. Field Description height Content height in pixels. bottomOffset Distance from the bottom edge of the primary display. padding Applied to the window chrome and well content. cornerRadius Radius for the outer frame. wells Defines the columns rendered on startup. Each entry supplies: id – unique identifier used for IPC updates and tray actions. width – initial width in pixels. index (optional) – absolute position. When omitted, file order is used. Use runtime messages (add, remove, resize) for incremental layout tweaks once the HUD is running. updates Seeds well text/color/action state the moment the HUD loads. You can include the same fields accepted by the set IPC operation: text – label content. Emoji are supported. fg / bg – hex colors, e.g. #RRGGBB, #AARRGGBB, hex:33223333. blink – boolean accent hint. action – command or URL invoked on click while click-through is disabled. tasks Optional array for background work managed through the tray icon. See Background Tasks for full details. actions Top-level dictionary mapping well IDs to action strings. This is a shorthand for seeding click handlers when you do not need to set text or colors. Editing tips Keep a copy of the template under source control and sync it to %LOCALAPPDATA% during deployment. Validate JSON with pwsh or any linter before running Traycer; the HUD exits on parse errors. When iterating on layout, start with the defaults file and then fine-tune at runtime with IPC messages until the layout feels right."
  },
  "articles/getting-started.html": {
    "href": "articles/getting-started.html",
    "title": "Getting Started | Traycer HUD",
    "summary": "Getting Started This guide walks through installing Traycer HUD, seeding its configuration, and understanding day-to-day usage. Prerequisites Windows 10 or later with .NET 8 desktop runtime. Clone of the Traycer repository. Optional: Python or other tooling referenced by your background tasks. Build and run Restore and build from the repository root: dotnet build src/Traycer.csproj Launch the HUD: dotnet run --project src/Traycer.csproj The tray icon appears in the notification area. Right-click it to open commands for wells and background tasks. Defaults file Traycer will look for traycer.defaults.json under %LOCALAPPDATA%\\Traycer. If the file is missing, the app offers to scaffold a template based on the copy bundled beside the executable. Key sections to configure: placement – tune height, padding, and corner radius of the HUD. wells – declare the columns shown on screen, including width and optional index order. updates – seed initial text, colors, and click actions for wells. tasks – define background processes or scheduled jobs managed through the tray menu. Interaction basics Toggle click-through mode with Win+Alt+H. While click-through is off, left-clicking a well triggers its bound action. The HUD reasserts topmost order automatically and when the window deactivates. Use the tray menu to remove wells, start or stop scheduled tasks, and exit the app. For the JSON commands that drive the HUD dynamically, see the IPC Protocol article."
  },
  "articles/ipc-protocol.html": {
    "href": "articles/ipc-protocol.html",
    "title": "IPC JSON Protocol | Traycer HUD",
    "summary": "IPC JSON Protocol Traycer listens on the named pipe \\\\.\\pipe\\TraycerHud for newline-delimited UTF-8 JSON payloads. Each message is applied immediately and the pipe remains one-way—no acknowledgements are sent. Colors Color fields accept #RRGGBB, #AARRGGBB, 0xAARRGGBB, or hex:AARRGGBB formats. Click actions A well may define an action that runs when the user left-clicks while click-through mode is off (toggle with Win+Alt+H). If the action string contains ://, it is launched via the shell. Otherwise Traycer executes cmd.exe /c <action>. Operations placement Adjust the HUD geometry for the current session. {\"op\":\"placement\",\"height\":24,\"bottomOffset\":2,\"padding\":6,\"cornerRadius\":8} Field Description height Content height in pixels bottomOffset Offset from the screen bottom in pixels padding Outer and inner padding in pixels cornerRadius Corner radius in pixels config Replace all wells with the supplied collection. {\"op\":\"config\",\"wells\":[{\"id\":\"weather\",\"width\":240},{\"id\":\"build\",\"width\":180}]} Each entry supplies: id – unique well identifier width – width in pixels add Insert a well without clearing existing wells. {\"op\":\"add\",\"well\":\"alerts\",\"width\":160,\"index\":2} If index is omitted, the well is appended. Supplying an existing well id resizes that column instead. remove {\"op\":\"remove\",\"well\":\"ram\"} resize {\"op\":\"resize\",\"well\":\"weather\",\"width\":300} set Set text, styling, and action for a single well. {\"op\":\"set\",\"well\":\"build\",\"text\":\"✔ Passing\",\"bg\":\"#33305533\",\"fg\":\"#FFFFFF\",\"blink\":false,\"action\":\"start https://ci.example.com\"} Fields: text – label content (emoji supported) fg, bg – colors (see formats above) blink – boolean hint used for emphasis styling action – command or URL to run on click bulk Apply multiple set updates in a single message. {\"op\":\"bulk\",\"updates\":[ {\"op\":\"set\",\"well\":\"net\",\"text\":\"\uD83D\uDCF6 142 Mbps\"}, {\"op\":\"set\",\"well\":\"cpu\",\"text\":\"\uD83D\uDDA5️ 34%\"}, {\"op\":\"set\",\"well\":\"ram\",\"text\":\"\uD83D\uDCE6 61%\"} ]} bind Bind or update an action without touching text or colors. {\"op\":\"bind\",\"well\":\"meeting\",\"action\":\"start https://meet.example.com/room\"}"
  },
  "articles/overview.html": {
    "href": "articles/overview.html",
    "title": "Traycer HUD Documentation | Traycer HUD",
    "summary": "Traycer HUD Documentation Welcome to the Traycer HUD documentation set. These pages cover the essentials for installing, configuring, and extending the Traycer overlay. Getting Started – install the HUD, configure the defaults file, and learn tray controls. IPC JSON Protocol – reference the messages available over the named pipe. Defaults Configuration – understand how Traycer discovers and parses traycer.defaults.json. Background Tasks – manage scheduled and one-off jobs controlled through the tray. Custom Script Tutorial – build timer jobs and long-lived daemons that push well updates. API Reference – explore public types generated from the codebase. Need something that is not covered here? Open an issue or contribution proposal in the repository."
  },
  "articles/tasks.html": {
    "href": "articles/tasks.html",
    "title": "Background Tasks | Traycer HUD",
    "summary": "Background Tasks Traycer can manage external processes through the defaults file and the tray menu. Tasks let you launch one-off commands on startup or register jobs with Windows Task Scheduler. Defining tasks Add a tasks array to traycer.defaults.json. Each entry uses the following fields: Field Description id Unique identifier displayed in the tray menu. command Executable to launch (absolute path or relative to the Traycer binary). args Optional arguments string (environment variables are expanded). mode Either \"once\" for direct process launches or \"schedule\" for Task Scheduler integration. autoStart When true, Traycer starts the task on launch (or immediately queues the scheduled task). workingDirectory Optional working directory; relative paths resolve against the app directory. schedule Required when mode is \"schedule\"; see below. Example: \"tasks\": [ { \"id\": \"weather-refresh\", \"command\": \"python.exe\", \"args\": \"\\\"scripts/weather.py\\\" 47.61 -122.33\", \"mode\": \"once\", \"autoStart\": true, \"workingDirectory\": \"..\" }, { \"id\": \"calendar-loop\", \"command\": \"pythonw.exe\", \"args\": \"\\\"scripts/calendar_overview.py\\\" https://example.com/private.ics\", \"mode\": \"schedule\", \"autoStart\": true, \"schedule\": { \"frequency\": \"minute\", \"interval\": 5, \"start\": \"06:00\" } } ] Scheduled triggers When mode is \"schedule\", provide a schedule object: frequency – minute, hour, hours, daily, day, logon, or once. interval – optional integer controlling repetition. For example, frequency: \"minute\" with interval: 5 runs every five minutes. start – optional HH:mm time for the first run. Traycer registers the task under the Traycer folder in Task Scheduler using the current interactive user. When the app exits it cleans up any scheduled entries it created. Tray controls Open the Traycer notify icon to see a Tasks submenu. Options vary by mode: Run now – launches the process or immediately triggers the scheduled job. Kill process – available for once tasks currently running. Stop – cancels a scheduled task that is currently active. Traycer keeps track of running processes and displays their PID next to the task name when available. Tips Use pythonw.exe (or similar) for scheduled jobs when you want a windowless experience. Set autoStart to false for manual utilities you only trigger from the tray menu. Combine tasks with IPC scripts to automate well updates on a cadence."
  },
  "index.html": {
    "href": "index.html",
    "title": "",
    "summary": ""
  }
}